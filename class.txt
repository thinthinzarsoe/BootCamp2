class Person:
		pass #An empty block

p = Person()
print(p)


Methods

class Person:
	def say_hi(self):
		print('Hello, how are you?')

p = Person()
p.say_hi()


__init__method

class Person:
	def__init__(self, name):
		self.name = name

	def say_hi(self):
		print('Hello, my name is ', self.name)

p = Person('Swaroop')
p.say_hi()

dog = dog('Name')
dog.color('Black')
dog.owner('Aster')


steve.function() - bark
			     - eat
			     - sleep
			     - bite

----------------------------

Class And Object Variables

class Robot:
	"""Represents a robot, with a name."""

	population = 0

	def__init__(self,name):
		"""Initializes the data.""

		self.name = name
		print("(Initializing{})".format(self.name))

		Robot.population += 1

	def die(self):
		"""I am dying."""

		print("{} is being destroyed!".format(self.name))

		Robot.population -= 1

		if Robot.population == 0:
			print("{} was the last one.".format(self.name))
		else:
			print("There are still {:d} robots working.".format(Robot.population))

	def say_hi(self):
		"""Greeting by the robot.
		Yeah, they can do that."""

		print("Greetings, my sisters call me{}.".format(self.name))


	@classmethod
	def how_many(cls):
			"""Prints the current population."""
			print("We have {:d} robots.".format(cls.population))


